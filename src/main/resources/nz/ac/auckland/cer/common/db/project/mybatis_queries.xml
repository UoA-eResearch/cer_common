<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nz.ac.auckland.cer.common.db.project">

  <select id="getAdviserForEppn" parameterType="java.lang.String" resultType="nz.ac.auckland.cer.common.db.project.pojo.Adviser">
    SELECT *
    FROM adviser 
    WHERE id IN (
      SELECT adviserId 
      FROM adviser_properties
      WHERE propname = 'eppn' AND
            propvalue = #{eppn}
    )
  </select>	

  <select id="getAdviserForTuakiriSharedToken" parameterType="java.lang.String" resultType="nz.ac.auckland.cer.common.db.project.pojo.Adviser">
    SELECT *
    FROM adviser 
    WHERE id IN (
      SELECT adviserId 
      FROM adviser_properties
      WHERE propname = 'tuakiriSharedToken' AND
            propvalue = #{sharedToken}
    )
  </select>	

  <select id="getResearcherForEppn" parameterType="java.lang.String" resultType="nz.ac.auckland.cer.common.db.project.pojo.Researcher">
    SELECT *
    FROM researcher 
    WHERE id IN (
      SELECT researcherId 
      FROM researcher_properties
      WHERE propname = 'eppn' AND
            propvalue = #{eppn}
    )
  </select> 

  <select id="getResearcherForTuakiriSharedToken" parameterType="java.lang.String" resultType="nz.ac.auckland.cer.common.db.project.pojo.Researcher">
    SELECT *
    FROM researcher 
    WHERE id IN (
      SELECT researcherId 
      FROM researcher_properties
      WHERE propname = 'tuakiriSharedToken' AND
            propvalue = #{sharedToken}
    )
  </select> 

  <select id="getAccountNamesForResearcherId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT propvalue
    FROM researcher_properties
    WHERE researcherId = #{researcherId} AND
          propname = 'linuxUsername'
  </select> 

  <select id="getAccountNamesForAdviserId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT propvalue
    FROM adviser_properties
    WHERE adviserId = #{adviserId} AND
          propname = 'linuxUsername'
  </select> 
	
  <select id="getAffiliations" resultType="nz.ac.auckland.cer.common.db.project.pojo.Affiliation">
    SELECT DISTINCT
      IFNULL(i.name,'') as institution, '' as division, '' as department
    FROM institution i

    UNION

    SELECT IFNULL(i.name,'') as institution,
           IFNULL(d.name,'') as division, '' as department
    FROM institution i
    LEFT JOIN division d ON i.id = d.institutionId

    UNION

    SELECT IFNULL(i.name,'') AS institution,
           IFNULL(di.name,'') AS division,
           IFNULL(de.name,'') AS department
    FROM institution i
    LEFT JOIN division di ON i.id = di.institutionId
    LEFT JOIN department de on di.id = de.divisionId

    ORDER BY institution, division, department
  </select>

  <select id="getInstitutionalRoles" resultType="nz.ac.auckland.cer.common.db.project.pojo.InstitutionalRole">
    SELECT *
    FROM institutionalrole
    ORDER BY name
  </select> 
  
  <select id="getInstitutionalRoleName" resultType="java.lang.String" parameterType="java.lang.Integer">
    SELECT name
    FROM institutionalrole 
    WHERE id = #{id}
  </select> 

  <select id="getResearcherStatusName" resultType="java.lang.String" parameterType="java.lang.Integer">
    SELECT name
    FROM researcher_status 
    WHERE id = #{id}
  </select> 

  <select id="getRolesOnProjectsForResearcher" resultType="java.util.HashMap" parameterType="java.lang.Integer">
    SELECT rp.projectId AS pid, rr.name AS role
    FROM researcher_project rp 
    INNER JOIN researcherrole rr ON rr.id=rp.researcherRoleId 
    WHERE rp.researcherId=#{id}
  </select>

  <select id="getScienceStudies" resultType="nz.ac.auckland.cer.common.db.project.pojo.ScienceStudy">
    SELECT id, name
    FROM sciencestudy
    ORDER BY name
  </select>

  <select id="getScienceStudyNameForId" resultType="java.lang.String"  parameterType="java.lang.Integer">
    SELECT name
    FROM sciencestudy
    WHERE id = #{id}
  </select>

  <select id="getScienceDomainNameForScienceStudyId" resultType="java.lang.String"  parameterType="java.lang.Integer">
    SELECT name FROM sciencedomain
    WHERE id = (SELECT scienceDomainId FROM sciencestudy WHERE id = #{id})
  </select>

  <select id="isUserAdviser" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM adviser_properties 
    WHERE propname = 'tuakiriSharedToken' AND 
          propvalue = #{sharedToken}
  </select>	

  <select id="getProjectCodes" resultType="java.lang.String">
    SELECT DISTINCT 
    CONCAT_WS(": ", projectCode, IF(LENGTH(name)>60,CONCAT(SUBSTRING(name,1,80), "..."),name))
    FROM project
    WHERE
      projectCode LIKE 'nesi%' OR
      projectCode LIKE 'uoa%' OR
      projectCode LIKE 'uoo%' OR
      projectCode LIKE 'massey%' OR
      projectCode LIKE 'landcare%'
    ORDER BY projectCode
  </select>
   
  <select id="getProjectCodesForSharedToken" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
    CONCAT_WS(": ", projectCode, IF(LENGTH(name)>60,CONCAT(SUBSTRING(name,1,80), "..."),name))
    FROM project 
    INNER JOIN researcher_project 
    ON researcher_project.projectId = project.id AND 
       researcher_project.researcherId = (
         SELECT researcherId 
         FROM researcher_properties 
         WHERE propname='tuakiriSharedToken' AND 
               propvalue = #{sharedToken}
       )
    ORDER BY projectCode
  </select>

  <select id="getProjectCodesForEppn" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
    CONCAT_WS(": ", projectCode, IF(LENGTH(name)>60,CONCAT(SUBSTRING(name,1,80), "..."),name))
    FROM project 
    INNER JOIN researcher_project 
    ON researcher_project.projectId = project.id AND 
       researcher_project.researcherId = (
         SELECT researcherId 
         FROM researcher_properties 
         WHERE propname='eppn' AND 
               propvalue = #{eppn}
       )
    ORDER BY projectCode
  </select>
	
  <select id="getResearcherAccountNamesForSharedToken" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT DISTINCT propvalue AS linuxUsername 
    FROM researcher_properties
    WHERE propname = 'linuxUsername' AND
          researcherId IN ( 
            SELECT researcherId 
            FROM researcher_properties
            WHERE propname = 'tuakiriSharedToken' AND
                  propvalue = #{sharedToken}
          )
  </select>	

  <select id="getResearcherOrAdviserAccountNamesForSharedToken" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT linuxUsername
    FROM
    (  
       SELECT DISTINCT propvalue AS linuxUsername 
       FROM researcher_properties
       WHERE propname = 'linuxUsername' AND
             researcherId IN ( 
               SELECT researcherId 
               FROM researcher_properties
               WHERE propname = 'tuakiriSharedToken' AND
                     propvalue = #{sharedToken}
             )
         
       UNION
         
       SELECT DISTINCT propvalue AS linuxUsername 
       FROM adviser_properties
       WHERE propname = 'linuxUsername' AND
             adviserId IN ( 
               SELECT adviserId 
               FROM adviser_properties
               WHERE propname = 'tuakiriSharedToken' AND
                     propvalue = #{sharedToken}
             )
    ) DERIVED  
  </select>	

</mapper>
